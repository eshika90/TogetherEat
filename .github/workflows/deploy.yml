name: Deploy to Amazon EC2

on:
  push:
    branches:
      - main

# 본인이 설정한 값을 여기서 채워넣습니다.
# 리전, 버킷 이름, CodeDeploy 앱 이름, CodeDeploy 배포 그룹 이름
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: togethereat-s3-bucket
  CODE_DEPLOY_APPLICATION_NAME: togethereatdeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: togethereat-deploy-group

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      # (1) 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # (2) Node.js 세팅
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.17.1'


        
        # (4) build (Test 제외)
      - name: Install dependencies
        run: npm install

        # (3) 환경변수 세팅
      - name: Set environment variables and start application
        run: |
          export DATABASE_HOST=${{ secrets.DATABASE_HOST }}
          export DATABASE_PORT=${{ secrets.DATABASE_PORT }}
          export DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
          export DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
          export DATABASE_NAME=${{ secrets.DATABASE_NAME }}
          export DATABASE_SYNCHRONIZE=${{ secrets.DATABASE_SYNCHRONIZE }}
          export JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
          export REGION=${{ secrets.REGION }}
          export BUCKET_NAME=${{ secrets.BUCKET_NAME }}
          export AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}
          export AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
          export KAKAO_API_KEY=${{ secrets.KAKAO_API_KEY }}
          export KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}
          export KAKAO_CALLBACK_URL=${{ secrets.KAKAO_CALLBACK_URL }}
          
      - name: Build test
        run: npm run build
        
      # (5) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      # (5) 빌드 결과물을 S3 버킷에 업로드
      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
            --source .
      
      # (6) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
